// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericBoson.Zozo
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Pong : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Pong GetRootAsPong(ByteBuffer _bb) { return GetRootAsPong(_bb, new Pong()); }
  public static Pong GetRootAsPong(ByteBuffer _bb, Pong obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Pong __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GenericBoson.Zozo.Pong> CreatePong(FlatBufferBuilder builder,
      int timestamp = 0) {
    builder.StartTable(1);
    Pong.AddTimestamp(builder, timestamp);
    return Pong.EndPong(builder);
  }

  public static void StartPong(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTimestamp(FlatBufferBuilder builder, int timestamp) { builder.AddInt(0, timestamp, 0); }
  public static Offset<GenericBoson.Zozo.Pong> EndPong(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GenericBoson.Zozo.Pong>(o);
  }
}


static public class PongVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Timestamp*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
