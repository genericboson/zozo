// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GenericBoson.Zozo
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TicketPair : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public TicketPair __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GenericBoson.Zozo.Ticket Key { get { return (GenericBoson.Zozo.Ticket)__p.bb.GetInt(__p.bb_pos + 0); } }
  public long Value { get { return __p.bb.GetLong(__p.bb_pos + 8); } }

  public static Offset<GenericBoson.Zozo.TicketPair> CreateTicketPair(FlatBufferBuilder builder, GenericBoson.Zozo.Ticket Key, long Value) {
    builder.Prep(8, 16);
    builder.PutLong(Value);
    builder.Pad(4);
    builder.PutInt((int)Key);
    return new Offset<GenericBoson.Zozo.TicketPair>(builder.Offset);
  }
}


}
