// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_CONSTANT_GENERICBOSON_ZOZO_H_
#define FLATBUFFERS_GENERATED_CONSTANT_GENERICBOSON_ZOZO_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 25 &&
              FLATBUFFERS_VERSION_MINOR == 2 &&
              FLATBUFFERS_VERSION_REVISION == 10,
             "Non-compatible flatbuffers version included");

namespace GenericBoson {
namespace Zozo {

enum ResultCode : uint32_t {
  ResultCode_Success = 0,
  ResultCode_InvalidPacket = 1,
  ResultCode_WrongPassword = 2,
  ResultCode_NewAccount = 3,
  ResultCode_LogicError = 4,
  ResultCode_MIN = ResultCode_Success,
  ResultCode_MAX = ResultCode_LogicError
};

inline const ResultCode (&EnumValuesResultCode())[5] {
  static const ResultCode values[] = {
    ResultCode_Success,
    ResultCode_InvalidPacket,
    ResultCode_WrongPassword,
    ResultCode_NewAccount,
    ResultCode_LogicError
  };
  return values;
}

inline const char * const *EnumNamesResultCode() {
  static const char * const names[6] = {
    "Success",
    "InvalidPacket",
    "WrongPassword",
    "NewAccount",
    "LogicError",
    nullptr
  };
  return names;
}

inline const char *EnumNameResultCode(ResultCode e) {
  if (::flatbuffers::IsOutRange(e, ResultCode_Success, ResultCode_LogicError)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesResultCode()[index];
}

}  // namespace Zozo
}  // namespace GenericBoson

#endif  // FLATBUFFERS_GENERATED_CONSTANT_GENERICBOSON_ZOZO_H_
