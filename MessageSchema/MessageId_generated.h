// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MESSAGEID_GENERICBOSON_ZOZO_H_
#define FLATBUFFERS_GENERATED_MESSAGEID_GENERICBOSON_ZOZO_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 25 &&
              FLATBUFFERS_VERSION_MINOR == 2 &&
              FLATBUFFERS_VERSION_REVISION == 10,
             "Non-compatible flatbuffers version included");

namespace GenericBoson {
namespace Zozo {

enum MessageId : uint32_t {
  MessageId_None = 0,
  MessageId_Connection = 1,
  MessageId_MIN = MessageId_None,
  MessageId_MAX = MessageId_Connection
};

inline const MessageId (&EnumValuesMessageId())[2] {
  static const MessageId values[] = {
    MessageId_None,
    MessageId_Connection
  };
  return values;
}

inline const char * const *EnumNamesMessageId() {
  static const char * const names[3] = {
    "None",
    "Connection",
    nullptr
  };
  return names;
}

inline const char *EnumNameMessageId(MessageId e) {
  if (::flatbuffers::IsOutRange(e, MessageId_None, MessageId_Connection)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesMessageId()[index];
}

}  // namespace Zozo
}  // namespace GenericBoson

#endif  // FLATBUFFERS_GENERATED_MESSAGEID_GENERICBOSON_ZOZO_H_
